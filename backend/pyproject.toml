[project]
name = "aris"
version = "0.1.0"
description = "Add your description here"
readme = "README.md"
requires-python = ">=3.13"
dependencies = [
    "alembic>=1.15.1",
    "beautifulsoup4>=4.13.3",
    "fastapi[standard]>=0.115.11",
    "lxml>=5.3.2",
    "psycopg2-binary>=2.9.10",
    "rsm-markup>=0.3",
    "sqlalchemy>=2.0.39",
    "ujson>=5.10.0",
    "uvicorn>=0.34.0",
    "python-jose[cryptography]>=3.4.0",
    "pydantic-settings>=2.9.1",
    "pydantic[email]>=2.11.1",
    "bcrypt>=4.3.0",
    "python-dotenv>=1.1.0",
    "asyncpg>=0.30.0",
    "greenlet>=3.1.1",
    "pytest>=8.4.0",
    "pytest-asyncio>=1.0.0",
    "httpx>=0.28.1",
    "aiosqlite>=0.21.0",
    "pytest-xdist>=3.7.0",
    "resend>=2.10.0",
]

[dependency-groups]
test = [
    "freezegun>=1.5.2",
    "pillow>=11.2.1",
    "pytest-cov>=6.1.1",
]
dev = [
    "ruff>=0.8.0",
    "mypy>=0.991,<0.992",
    "types-python-jose>=3.5.0.20250531",
    "types-pillow>=10.2.0.20240822",
    "types-psycopg2>=2.9.21.20250516",
    "pytest-postgresql>=7.0.2",
    "types-beautifulsoup4>=4.12.0.20250516",
]

[tool.setuptools]
package-dir = {"" = "."}


[tool.mypy]
# Basic configuration
python_version = "3.13"
strict = false
warn_return_any = true
warn_unused_configs = true
disallow_untyped_defs = false
check_untyped_defs = true

# Import discovery
mypy_path = "."
packages = ["aris"]
namespace_packages = true

# Error handling
warn_redundant_casts = true
warn_unused_ignores = true
warn_no_return = true
warn_unreachable = false  # Disable unreachable code warnings (common in error handling)

# None and Optional handling
no_implicit_optional = true
strict_optional = true

# Ignore missing imports for external libraries
ignore_missing_imports = true

# Performance
cache_dir = ".mypy_cache"
sqlite_cache = true

# Per-module options
[[tool.mypy.overrides]]
module = "aris.models.*"
# Allow SQLAlchemy column assignments that mypy doesn't understand
disable_error_code = ["assignment"]

[[tool.mypy.overrides]]
module = "aris.crud.*"
# Allow SQLAlchemy ORM patterns
disable_error_code = ["assignment", "attr-defined"]

[[tool.mypy.overrides]]
module = "aris.routes.*"
# Allow FastAPI dependency injection patterns
disable_error_code = ["arg-type"]

[[tool.mypy.overrides]]
module = "tests.*"
# Relax type checking for tests
ignore_errors = true

# External library configurations
[[tool.mypy.overrides]]
module = "rsm.*"
ignore_missing_imports = true

[[tool.mypy.overrides]]
module = "sqlalchemy.*"
# SQLAlchemy has its own type checking complexities
disable_error_code = ["assignment", "attr-defined"]

[tool.ruff]
line-length = 100

[tool.ruff.lint]
extend-select = ["I"]    # Enable import sorting

[tool.ruff.lint.isort]
known-first-party = ["aris"]
force-single-line = false
lines-after-imports = 2


[tool.pylsp.plugins.pycodestyle]
max_line_length = 100


[tool.pylsp.plugins.flake8]
enabled = false


[tool.pytest.ini_options]
filterwarnings = [
    "ignore::DeprecationWarning:pkg_resources",
    "ignore::DeprecationWarning:fs",
]
testpaths = ["tests"]
python_files = ["test_*.py"]
python_classes = ["Test*"]
python_functions = ["test_*"]
asyncio_mode = "auto"

[tool.coverage.run]
branch = true
omit = ["*/tests/*"]

[tool.coverage.report]
exclude_lines = [
    "pragma: no cover",
    "if __name__ == .__main__.:",
    "@abc.abstractmethod",
    "raise NotImplementedError"
]
show_missing = true
