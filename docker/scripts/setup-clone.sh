#!/bin/bash
set -e

# Aris Multi-Clone Setup Script
# Automates the setup of additional repository clones

# Validate environment variables first
node ../env-check.js

echo "🚀 Aris Multi-Clone Setup"
echo "========================="

# Get clone number
read -p "Enter clone number (2, 3, etc.): " CLONE_NUM

if [[ ! "$CLONE_NUM" =~ ^[0-9]+$ ]] || [ "$CLONE_NUM" -lt 2 ]; then
    echo "❌ Error: Please enter a valid clone number (2 or higher)"
    exit 1
fi

# Calculate ports
BACKEND_PORT=$((8000 + CLONE_NUM - 1))
FRONTEND_PORT=$((5173 + CLONE_NUM - 1))
STORYBOOK_PORT=$((6006 + CLONE_NUM - 1))
DB_PORT=$((5432 + CLONE_NUM - 1))

echo "📋 Configuration for Clone $CLONE_NUM:"
echo "   Backend Port:    $BACKEND_PORT"
echo "   Frontend Port:   $FRONTEND_PORT"
echo "   Storybook Port:  $STORYBOOK_PORT"
echo "   Database Port:   $DB_PORT"
echo ""

# Create .env file
ENV_FILE="docker/.env"

if [ -f "$ENV_FILE" ]; then
    read -p "⚠️  $ENV_FILE already exists. Overwrite? (y/N): " -n 1 -r
    echo
    if [[ ! $REPLY =~ ^[Yy]$ ]]; then
        echo "❌ Setup cancelled"
        exit 1
    fi
fi

cat > "$ENV_FILE" << EOF
# Multi-clone development configuration - Clone $CLONE_NUM
# Generated by setup-clone.sh on $(date)

# Backend configuration
BACKEND_PORT=$BACKEND_PORT

# Frontend configuration  
FRONTEND_PORT=$FRONTEND_PORT
STORYBOOK_PORT=$STORYBOOK_PORT

# Database configuration
DB_PORT=$DB_PORT
DB_NAME=aris_clone$CLONE_NUM
TEST_DB_NAME=aris_clone${CLONE_NUM}_test
EOF

echo "✅ Created $ENV_FILE"

# Update frontend .env if it exists
FRONTEND_ENV="frontend/.env"
if [ -f "$FRONTEND_ENV" ]; then
    # Update the API base URL to match backend port
    sed -i.bak "s/localhost:[0-9]*/localhost:$BACKEND_PORT/g" "$FRONTEND_ENV"
    echo "✅ Updated $FRONTEND_ENV with backend port $BACKEND_PORT"
fi

echo ""
echo "🎉 Clone $CLONE_NUM setup complete!"
echo ""
echo "📋 Next steps:"
echo "   1. cd docker"
echo "   2. docker compose -f docker-compose.dev.yml up --build"
echo ""
echo "🌐 Your services will be available at:"
echo "   Frontend: http://localhost:$FRONTEND_PORT"
echo "   Backend:  http://localhost:$BACKEND_PORT"
echo "   API Docs: http://localhost:$BACKEND_PORT/docs"
echo ""
echo "🔧 To stop services:"
echo "   docker compose -f docker-compose.dev.yml down"